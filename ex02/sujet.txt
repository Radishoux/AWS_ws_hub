pour ce second exercice, on continue doucement

instanciez une DB via ddb (dynamoDB)
créez une fonction sur Lambda
créez une API sur API gateway
connectez l'api a votre fonction lambda
faite en sorte que les valeurs recues par l'api soient transférées a la fonction lambda : (aide)

application/json :
{
"email": "$input.params('email')"
}

modifiez votre fonction lambda afin d'acceder a votre ddb : (aide)



const AWS = require('aws-sdk');
var ddb = new AWS.DynamoDB();

exports.handler = (event, context, callback) => {
    var params1 = {
        TableName: 'TADB',
        Key: {'email': {"S": event.email}}
    };
    ddb.getItem(params1, function(err, data) {
        if (err) callback(err, null);
        else if(Object.keys(data).length !== 0) callback(null, "this email already has an account");
        else
        {
            var params = {
                Item: {
                    'email': {"S" : event.email}
                },
                TableName: 'TADB'
            };
        
            ddb.putItem(params, function(err, data) {
                if (err) callback(err, null);
                else callback(null, "acc created");
            });
        }
    });
    
};

modifiez votre lambda afin d'écrire sur votre ddb (pas d'aide, ca va, man google un peu aussi)